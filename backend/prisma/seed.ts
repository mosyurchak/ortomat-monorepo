import { PrismaClient } from '@prisma/client';
import * as bcrypt from 'bcrypt';

const prisma = new PrismaClient();

async function main() {
  console.log('üå± Starting seed...');

  // –û—á–∏—â–∞—î–º–æ –ë–î
  await prisma.sale.deleteMany();
  await prisma.cell.deleteMany();
  await prisma.doctorOrtomat.deleteMany();
  await prisma.courierOrtomat.deleteMany();
  await prisma.product.deleteMany();
  await prisma.ortomat.deleteMany();
  await prisma.user.deleteMany();

  console.log('‚úÖ Database cleared');

  // –•–µ—à—É—î–º–æ –ø–∞—Ä–æ–ª—å
  const hashedPassword = await bcrypt.hash('password123', 10);

  // 1. –°—Ç–≤–æ—Ä—é—î–º–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞
  const admin = await prisma.user.create({
    data: {
      email: 'admin@ortomat.ua',
      password: hashedPassword,
      role: 'ADMIN',
      firstName: '–ê–¥–º—ñ–Ω',
      lastName: '–°–∏—Å—Ç–µ–º–∏',
      phone: '+380991234567',
      isVerified: true,
    },
  });
  console.log('‚úÖ Admin created');

  // 2. –°—Ç–≤–æ—Ä—é—î–º–æ 5 –æ—Ä—Ç–æ–º–∞—Ç—ñ–≤
  const ortomats = await Promise.all([
    prisma.ortomat.create({
      data: {
        name: '–û—Ä—Ç–æ–º–∞—Ç ‚Ññ1',
        address: '–≤—É–ª. –ö–∏—ó–≤—Å—å–∫–∞ 1, –ü–æ–ª—ñ–∫–ª—ñ–Ω—ñ–∫–∞ ‚Ññ1',
        totalCells: 37,
        status: 'active',
      },
    }),
    prisma.ortomat.create({
      data: {
        name: '–û—Ä—Ç–æ–º–∞—Ç ‚Ññ2',
        address: '–≤—É–ª. –ü–µ—Ä–µ–º–æ–≥–∏ 15, –¢—Ä–∞–≤–º–ø—É–Ω–∫—Ç ‚Ññ1',
        totalCells: 37,
        status: 'active',
      },
    }),
    prisma.ortomat.create({
      data: {
        name: '–û—Ä—Ç–æ–º–∞—Ç ‚Ññ3',
        address: '–ø—Ä. –ú–∏—Ä—É 23, –ü–æ–ª—ñ–∫–ª—ñ–Ω—ñ–∫–∞ ‚Ññ3',
        totalCells: 37,
        status: 'active',
      },
    }),
    prisma.ortomat.create({
      data: {
        name: '–û—Ä—Ç–æ–º–∞—Ç ‚Ññ4',
        address: '–≤—É–ª. –°–æ–±–æ—Ä–Ω–∞ 45, –õ—ñ–∫–∞—Ä–Ω—è ‚Ññ2',
        totalCells: 37,
        status: 'active',
      },
    }),
    prisma.ortomat.create({
      data: {
        name: '–û—Ä—Ç–æ–º–∞—Ç ‚Ññ5',
        address: '–≤—É–ª. –ù–µ–∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ 67, –¢—Ä–∞–≤–º–ø—É–Ω–∫—Ç ‚Ññ2',
        totalCells: 37,
        status: 'active',
      },
    }),
  ]);
  console.log('‚úÖ 5 Ortomats created');

  // 3. –°—Ç–≤–æ—Ä—é—î–º–æ 7 –≤–∏–¥—ñ–≤ —Ç–æ–≤–∞—Ä—ñ–≤
  const products = [
    {
      name: '–ù–∞–∫–æ–ª—ñ–Ω–Ω–∏–∫ –µ–ª–∞—Å—Ç–∏—á–Ω–∏–π S',
      category: '–ù–∞–∫–æ–ª—ñ–Ω–Ω–∏–∫–∏',
      description: '–ï–ª–∞—Å—Ç–∏—á–Ω–∏–π –Ω–∞–∫–æ–ª—ñ–Ω–Ω–∏–∫ –¥–ª—è –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ –∫–æ–ª—ñ–Ω–Ω–æ–≥–æ —Å—É–≥–ª–æ–±–∞',
      size: 'S',
      price: 450,
      imageUrl: '/images/nakolin-s.jpg',
      attributes: {
        sizes: ['S', 'M', 'L', 'XL'],
        material: '–ï–ª–∞—Å—Ç–∞–Ω 80%, –ü–æ–ª—ñ–µ—Å—Ç–µ—Ä 20%',
        compression: '–°–µ—Ä–µ–¥–Ω—è',
        support: '–ö–æ–ª—ñ–Ω–Ω–∏–π —Å—É–≥–ª–æ–±',
      },
    },
    {
      name: '–ù–∞–∫–æ–ª—ñ–Ω–Ω–∏–∫ –µ–ª–∞—Å—Ç–∏—á–Ω–∏–π M',
      category: '–ù–∞–∫–æ–ª—ñ–Ω–Ω–∏–∫–∏',
      description: '–ï–ª–∞—Å—Ç–∏—á–Ω–∏–π –Ω–∞–∫–æ–ª—ñ–Ω–Ω–∏–∫ –¥–ª—è –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ –∫–æ–ª—ñ–Ω–Ω–æ–≥–æ —Å—É–≥–ª–æ–±–∞',
      size: 'M',
      price: 450,
      imageUrl: '/images/nakolin-m.jpg',
      attributes: {
        sizes: ['S', 'M', 'L', 'XL'],
        material: '–ï–ª–∞—Å—Ç–∞–Ω 80%, –ü–æ–ª—ñ–µ—Å—Ç–µ—Ä 20%',
        compression: '–°–µ—Ä–µ–¥–Ω—è',
        support: '–ö–æ–ª—ñ–Ω–Ω–∏–π —Å—É–≥–ª–æ–±',
      },
    },
    {
      name: '–ë–∞–Ω–¥–∞–∂ –Ω–∞ –≥–æ–º—ñ–ª–∫–æ–≤–æ—Å—Ç–æ–ø M',
      category: '–ë–∞–Ω–¥–∞–∂—ñ',
      description: '–ë–∞–Ω–¥–∞–∂ –¥–ª—è —Ñ—ñ–∫—Å–∞—Ü—ñ—ó –≥–æ–º—ñ–ª–∫–æ–≤–æ—Å—Ç–æ–ø–Ω–æ–≥–æ —Å—É–≥–ª–æ–±–∞',
      size: 'M',
      price: 520,
      imageUrl: '/images/bandazh-gomilka.jpg',
      attributes: {
        sizes: ['S', 'M', 'L'],
        material: '–ù–µ–æ–ø—Ä–µ–Ω',
        support: '–ì–æ–º—ñ–ª–∫–æ–≤–æ—Å—Ç–æ–ø',
        adjustable: true,
      },
    },
    {
      name: '–ö–æ—Ä—Å–µ—Ç –ø–æ–ø–µ—Ä–µ–∫–æ–≤–∏–π L',
      category: '–ö–æ—Ä—Å–µ—Ç–∏',
      description: '–û—Ä—Ç–æ–ø–µ–¥–∏—á–Ω–∏–π –∫–æ—Ä—Å–µ—Ç –¥–ª—è –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ –ø–æ–ø–µ—Ä–µ–∫–æ–≤–æ–≥–æ –≤—ñ–¥–¥—ñ–ª—É',
      size: 'L',
      price: 890,
      imageUrl: '/images/korset-l.jpg',
      attributes: {
        sizes: ['M', 'L', 'XL'],
        material: '–ù–µ–æ–ø—Ä–µ–Ω –∑ –º–µ—Ç–∞–ª–µ–≤–∏–º–∏ –≤—Å—Ç–∞–≤–∫–∞–º–∏',
        support: '–ü–æ–ø–µ—Ä–µ–∫–æ–≤–∏–π –≤—ñ–¥–¥—ñ–ª',
        adjustable: true,
      },
    },
    {
      name: '–û—Ä—Ç–µ–∑ –Ω–∞ –ø—Ä–æ–º–µ–Ω–µ–≤–æ-–∑–∞–ø\'—è—Å—Ç–∫–æ–≤–∏–π —Å—É–≥–ª–æ–±',
      category: '–û—Ä—Ç–µ–∑–∏',
      description: '–£–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω–∏–π –æ—Ä—Ç–µ–∑ –¥–ª—è —Ñ—ñ–∫—Å–∞—Ü—ñ—ó –∑–∞–ø\'—è—Å—Ç–∫–∞',
      size: '–£–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω–∏–π',
      price: 620,
      imageUrl: '/images/ortez-zapyastok.jpg',
      attributes: {
        universal: true,
        material: '–ù–µ–æ–ø—Ä–µ–Ω',
        support: '–ó–∞–ø\'—è—Å—Ç–∫–æ–≤–∏–π —Å—É–≥–ª–æ–±',
        adjustable: true,
      },
    },
    {
      name: '–ë–∞–Ω–¥–∞–∂ –Ω–∞ –ø–ª–µ—á–æ–≤–∏–π —Å—É–≥–ª–æ–± –ª—ñ–≤–∏–π',
      category: '–ë–∞–Ω–¥–∞–∂—ñ',
      description: '–ë–∞–Ω–¥–∞–∂ –¥–ª—è –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ –ª—ñ–≤–æ–≥–æ –ø–ª–µ—á–æ–≤–æ–≥–æ —Å—É–≥–ª–æ–±–∞',
      size: '–£–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω–∏–π',
      price: 780,
      imageUrl: '/images/bandazh-plecho-left.jpg',
      attributes: {
        sides: ['–õ—ñ–≤–∏–π', '–ü—Ä–∞–≤–∏–π'],
        material: '–ï–ª–∞—Å—Ç–∞–Ω',
        support: '–ü–ª–µ—á–æ–≤–∏–π —Å—É–≥–ª–æ–±',
        adjustable: true,
      },
    },
    {
      name: '–ï–ª–∞—Å—Ç–∏—á–Ω–∏–π –±–∏–Ω—Ç 5–º',
      category: '–ë–∏–Ω—Ç–∏',
      description: '–ú–µ–¥–∏—á–Ω–∏–π –µ–ª–∞—Å—Ç–∏—á–Ω–∏–π –±–∏–Ω—Ç',
      size: '5–º',
      price: 180,
      imageUrl: '/images/bint-5m.jpg',
      attributes: {
        lengths: ['5–º', '10–º'],
        material: '–ë–∞–≤–æ–≤–Ω–∞ 70%, –ï–ª–∞—Å—Ç–∞–Ω 30%',
        reusable: true,
      },
    },
  ];

  const createdProducts = [];
  for (const product of products) {
    const p = await prisma.product.create({ data: product });
    createdProducts.push(p);
  }
  console.log('‚úÖ 7 Products created');

  // 4. –°—Ç–≤–æ—Ä—é—î–º–æ –ª—ñ–∫–∞—Ä—ñ–≤ (10 –Ω–∞ –ø–µ—Ä—à–∏–π –æ—Ä—Ç–æ–º–∞—Ç)
  const doctors = [];
  for (let i = 1; i <= 10; i++) {
    const doctor = await prisma.user.create({
      data: {
        email: `doctor${i}@ortomat.ua`,
        password: hashedPassword,
        role: 'DOCTOR',
        firstName: `–õ—ñ–∫–∞—Ä${i}`,
        lastName: '–û—Ä—Ç–æ–ø–µ–¥',
        phone: `+38099${String(i).padStart(7, '0')}`,
        isVerified: true,
      },
    });

    // –ü—Ä–∏–≤'—è–∑—É—î–º–æ –¥–æ –ø–µ—Ä—à–æ–≥–æ –æ—Ä—Ç–æ–º–∞—Ç—É
    await prisma.doctorOrtomat.create({
      data: {
        doctorId: doctor.id,
        ortomatId: ortomats[0].id,
        referralCode: `REF-DOCTOR-${String(i).padStart(3, '0')}`,
        commissionPercent: 10.0,
      },
    });

    doctors.push(doctor);
  }
  console.log('‚úÖ 10 Doctors created and assigned to Ortomat #1');

  // 5. –°—Ç–≤–æ—Ä—é—î–º–æ 2 –∫—É—Ä'—î—Ä–∏
  const courier1 = await prisma.user.create({
    data: {
      email: 'courier1@ortomat.ua',
      password: hashedPassword,
      role: 'COURIER',
      firstName: '–ö—É—Ä\'—î—Ä',
      lastName: '–ü–µ—Ä—à–∏–π',
      phone: '+380991111111',
      isVerified: true,
    },
  });

  const courier2 = await prisma.user.create({
    data: {
      email: 'courier2@ortomat.ua',
      password: hashedPassword,
      role: 'COURIER',
      firstName: '–ö—É—Ä\'—î—Ä',
      lastName: '–î—Ä—É–≥–∏–π',
      phone: '+380992222222',
      isVerified: true,
    },
  });

  // –ü—Ä–∏–∑–Ω–∞—á–∞—î–º–æ –æ—Ä—Ç–æ–º–∞—Ç–∏ –∫—É—Ä'—î—Ä–∞–º
  await prisma.courierOrtomat.createMany({
    data: [
      { courierId: courier1.id, ortomatId: ortomats[0].id },
      { courierId: courier1.id, ortomatId: ortomats[1].id },
      { courierId: courier2.id, ortomatId: ortomats[2].id },
      { courierId: courier2.id, ortomatId: ortomats[3].id },
      { courierId: courier2.id, ortomatId: ortomats[4].id },
    ],
  });
  console.log('‚úÖ 2 Couriers created and assigned');

  // 6. –ó–∞–ø–æ–≤–Ω—é—î–º–æ –∫–æ–º—ñ—Ä–∫–∏ —Ç–æ–≤–∞—Ä–∞–º–∏ (–ø–æ 7 —Ç–æ–≤–∞—Ä—ñ–≤ –≤ –∫–æ–∂–µ–Ω –æ—Ä—Ç–æ–º–∞—Ç)
  for (const ortomat of ortomats) {
    for (let i = 0; i < 7; i++) {
      await prisma.cell.create({
        data: {
          number: i + 1,
          ortomatId: ortomat.id,
          productId: createdProducts[i].id,
          isAvailable: true,
        },
      });
    }
  }
  console.log('‚úÖ Cells filled with products');

  console.log('üéâ Seed completed successfully!');
  console.log('\nüìß Login credentials:');
  console.log('Admin: admin@ortomat.ua / password123');
  console.log('Doctor: doctor1@ortomat.ua / password123');
  console.log('Courier: courier1@ortomat.ua / password123');
}

main()
  .catch((e) => {
    console.error('‚ùå Seed failed:', e);
    process.exit(1);
  })
  .finally(async () => {
    await prisma.$disconnect();
  });