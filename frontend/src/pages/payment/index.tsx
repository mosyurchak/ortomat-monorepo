// frontend/src/pages/payment/index.tsx

import { useState, useEffect } from 'react';
import { useRouter } from 'next/router';
import { createPayment, openLiqPayWidget } from '../../lib/liqpay';
import api from '../../lib/api';

interface Product {
  id: string;
  name: string;
  price: number;
  description: string;
  imageUrl?: string;
}

interface Ortomat {
  id: string;
  name: string;
  address: string;
  city?: string;
}

export default function PaymentPage() {
  const router = useRouter();
  const { productId, ortomatId, doctorRef } = router.query;
  
  const [product, setProduct] = useState<Product | null>(null);
  const [ortomat, setOrtomat] = useState<Ortomat | null>(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState('');

  useEffect(() => {
    if (productId && ortomatId) {
      loadData();
    }
  }, [productId, ortomatId]);

  const loadData = async () => {
    try {
      setLoading(true);
      
      // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Ç–æ–≤–∞—Ä
      const productResponse = await api.get(`/products/${productId}`);
      setProduct(productResponse.data);
      
      // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –æ—Ä—Ç–æ–º–∞—Ç
      const ortomatResponse = await api.get(`/ortomats/${ortomatId}`);
      setOrtomat(ortomatResponse.data);
      
      setLoading(false);
    } catch (err) {
      console.error('Error loading data:', err);
      setError('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö');
      setLoading(false);
    }
  };

  const handlePayment = async () => {
    if (!product || !ortomat) {
      setError('–î–∞–Ω—ñ –ø—Ä–æ —Ç–æ–≤–∞—Ä –∞–±–æ –æ—Ä—Ç–æ–º–∞—Ç –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ');
      return;
    }

    try {
      setLoading(true);
      
      // –ì–µ–Ω–µ—Ä—É—î–º–æ —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π ID –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
      const orderId = `ORD_${Date.now()}`;
      
      // –°—Ç–≤–æ—Ä—é—î–º–æ –ø–ª–∞—Ç—ñ–∂ –∑ –†–ï–ê–õ–¨–ù–ò–ú–ò –¥–∞–Ω–∏–º–∏
      const paymentData = await createPayment({
        orderId: orderId,
        amount: product.price,  // ‚úÖ –†–µ–∞–ª—å–Ω–∞ —Ü—ñ–Ω–∞
        description: `–¢–æ–≤–∞—Ä: ${product.name}, –û—Ä—Ç–æ–º–∞—Ç: ${ortomat.name}`,  // ‚úÖ –†–µ–∞–ª—å–Ω–∏–π –æ–ø–∏—Å
        doctorId: doctorRef as string,
        productId: product.id,   // ‚úÖ ID —Ç–æ–≤–∞—Ä—É
        ortomatId: ortomat.id,   // ‚úÖ ID –æ—Ä—Ç–æ–º–∞—Ç—É
      });
      
      // –í—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ —Ñ–æ—Ä–º—É –æ–ø–ª–∞—Ç–∏ LiqPay
      openLiqPayWidget(paymentData);
      
    } catch (err) {
      console.error('Payment error:', err);
      setError('–ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–ª–∞—Ç–µ–∂—É. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.');
      setLoading(false);
    }
  };

  if (loading) {
    return (
      <div className="flex items-center justify-center min-h-screen">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500 mx-auto"></div>
          <p className="mt-4 text-gray-600">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</p>
        </div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="flex items-center justify-center min-h-screen">
        <div className="text-center">
          <p className="text-red-500 text-xl">{error}</p>
          <button
            onClick={() => router.back()}
            className="mt-4 px-6 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600"
          >
            –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –Ω–∞–∑–∞–¥
          </button>
        </div>
      </div>
    );
  }

  if (!product || !ortomat) {
    return (
      <div className="flex items-center justify-center min-h-screen">
        <p className="text-gray-600">–¢–æ–≤–∞—Ä –∞–±–æ –æ—Ä—Ç–æ–º–∞—Ç –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ</p>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gray-50 py-12 px-4">
      <div className="max-w-2xl mx-auto">
        <div className="bg-white rounded-lg shadow-lg overflow-hidden">
          {/* Header */}
          <div className="bg-blue-500 text-white py-6 px-8">
            <h1 className="text-2xl font-bold">–û–ø–ª–∞—Ç–∞ —Ç–æ–≤–∞—Ä—É</h1>
          </div>

          {/* Content */}
          <div className="p-8">
            {/* –ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—É */}
            {product.imageUrl && (
              <div className="mb-6">
                <img 
                  src={product.imageUrl} 
                  alt={product.name}
                  className="w-full h-64 object-cover rounded-lg"
                />
              </div>
            )}

            {/* –¢–æ–≤–∞—Ä */}
            <div className="mb-6 pb-6 border-b">
              <h2 className="text-sm text-gray-500 mb-2">–¢–æ–≤–∞—Ä</h2>
              <p className="text-xl font-semibold">{product.name}</p>
              {product.description && (
                <p className="text-gray-600 mt-1">{product.description}</p>
              )}
            </div>

            {/* –û—Ä—Ç–æ–º–∞—Ç */}
            <div className="mb-6 pb-6 border-b">
              <h2 className="text-sm text-gray-500 mb-2">–û—Ä—Ç–æ–º–∞—Ç</h2>
              <p className="text-xl font-semibold">{ortomat.name}</p>
              <p className="text-gray-600 mt-1">
                {ortomat.address}
                {ortomat.city && `, ${ortomat.city}`}
              </p>
            </div>

            {/* –°—É–º–∞ */}
            <div className="mb-8">
              <h2 className="text-sm text-gray-500 mb-2">–°—É–º–∞ –¥–æ —Å–ø–ª–∞—Ç–∏</h2>
              <p className="text-3xl font-bold text-blue-600">
                {product.price} ‚Ç¥
              </p>
            </div>

            {/* –ö–Ω–æ–ø–∫–∞ –æ–ø–ª–∞—Ç–∏ */}
            <button
              onClick={handlePayment}
              disabled={loading}
              className="w-full bg-blue-500 text-white py-4 rounded-lg text-lg font-semibold hover:bg-blue-600 transition-colors disabled:bg-gray-400 disabled:cursor-not-allowed"
            >
              {loading ? '–û–±—Ä–æ–±–∫–∞...' : '–û–ø–ª–∞—Ç–∏—Ç–∏'}
            </button>

            {/* –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –±–µ–∑–ø–µ–∫—É */}
            <div className="mt-6 text-center text-sm text-gray-500">
              <p>üîí –ó–∞—Ö–∏—â–µ–Ω–æ –ø–ª–∞—Ç—ñ–∂–Ω–æ—é —Å–∏—Å—Ç–µ–º–æ—é LiqPay</p>
            </div>
          </div>
        </div>

        {/* –ö–Ω–æ–ø–∫–∞ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è */}
        <div className="mt-6 text-center">
          <button
            onClick={() => router.back()}
            className="text-blue-500 hover:text-blue-600 underline"
          >
            ‚Üê –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –≤–∏–±–æ—Ä—É —Ç–æ–≤–∞—Ä—É
          </button>
        </div>
      </div>
    </div>
  );
}
