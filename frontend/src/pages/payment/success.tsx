import React, { useEffect, useState } from 'react';
import { useRouter } from 'next/router';
import Link from 'next/link';
import Head from 'next/head';
import axios from 'axios';

const API_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:3001';

export default function PaymentSuccessPage() {
  const router = useRouter();
  const [status, setStatus] = useState('checking');
  const [paymentInfo, setPaymentInfo] = useState<any>(null);
  const [isOpeningCell, setIsOpeningCell] = useState(false);
  
  // ‚úÖ –í–ò–ü–†–ê–í–õ–ï–ù–û: LiqPay –ø–æ–≤–µ—Ä—Ç–∞—î –ø–∞—Ä–∞–º–µ—Ç—Ä "order", –∞ –Ω–µ "order_id"
  const { order } = router.query;

  useEffect(() => {
    if (order) {
      checkStatus();
    }
  }, [order]);

  const checkStatus = async () => {
    try {
      console.log('üîç Checking payment status for:', order);
      
      // ‚úÖ –í–ò–ü–†–ê–í–õ–ï–ù–û: –í–∏–∫–ª–∏–∫–∞—î–º–æ –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π API endpoint
      const response = await axios.get(`${API_URL}/api/liqpay/status/${order}`);
      console.log('‚úÖ Payment status:', response.data);
      
      setPaymentInfo(response.data);
      
      if (response.data.status === 'SUCCESS') {
        setStatus('success');
      } else if (response.data.status === 'FAILED') {
        setStatus('failed');
      } else if (response.data.status === 'PENDING') {
        setStatus('pending');
        // –Ø–∫—â–æ —â–µ pending - –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —â–µ —Ä–∞–∑ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥–∏
        setTimeout(checkStatus, 2000);
      }
    } catch (error) {
      console.error('‚ùå Error checking status:', error);
      setStatus('error');
    }
  };

  // ‚úÖ –î–û–î–ê–ù–û: –§—É–Ω–∫—Ü—ñ—è –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è –∫–æ–º—ñ—Ä–∫–∏
  const handleOpenCell = async () => {
    if (!paymentInfo?.sales || paymentInfo.sales.length === 0) {
      alert('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø—Ä–æ–¥–∞–∂ –≤—ñ–¥—Å—É—Ç–Ω—è');
      return;
    }

    const sale = paymentInfo.sales[0];
    
    if (!sale.ortomatId) {
      alert('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –æ—Ä—Ç–æ–º–∞—Ç –≤—ñ–¥—Å—É—Ç–Ω—è');
      return;
    }

    setIsOpeningCell(true);

    try {
      console.log('üîì Opening cell for sale:', sale.id);

      // TODO: –ó–∞–º—ñ–Ω—ñ—Ç—å –Ω–∞ –≤–∞—à —Ä–µ–∞–ª—å–Ω–∏–π endpoint –¥–ª—è –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è –∫–æ–º—ñ—Ä–∫–∏
      await axios.post(`${API_URL}/api/ortomats/${sale.ortomatId}/open-cell`, {
        saleId: sale.id,
        productId: sale.productId,
      });

      alert('‚úÖ –ö–æ–º—ñ—Ä–∫–∞ –≤—ñ–¥–∫—Ä–∏—Ç–∞! –ó–∞–±–µ—Ä—ñ—Ç—å –≤–∞—à —Ç–æ–≤–∞—Ä.');
      
      // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—î–º–æ –Ω–∞ –≥–æ–ª–æ–≤–Ω—É —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥–∏
      setTimeout(() => {
        router.push('/');
      }, 3000);

    } catch (err: any) {
      console.error('‚ùå Error opening cell:', err);
      alert('–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è –∫–æ–º—ñ—Ä–∫–∏. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑ –∞–±–æ –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ —Å–ª—É–∂–±–∏ –ø—ñ–¥—Ç—Ä–∏–º–∫–∏.');
    } finally {
      setIsOpeningCell(false);
    }
  };

  const getStatusMessage = () => {
    switch (status) {
      case 'checking':
        return {
          icon: '‚è≥',
          title: '–ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂—É...',
          color: 'text-blue-600',
        };
      case 'success':
        return {
          icon: '‚úÖ',
          title: '–ü–ª–∞—Ç—ñ–∂ —É—Å–ø—ñ—à–Ω–∏–π!',
          color: 'text-green-600',
        };
      case 'failed':
        return {
          icon: '‚ùå',
          title: '–ü–ª–∞—Ç—ñ–∂ –Ω–µ –≤–¥–∞–≤—Å—è',
          color: 'text-red-600',
        };
      case 'pending':
        return {
          icon: '‚è∞',
          title: '–ü–ª–∞—Ç—ñ–∂ –≤ –æ–±—Ä–æ–±—Ü—ñ',
          color: 'text-yellow-600',
        };
      default:
        return {
          icon: '‚ö†Ô∏è',
          title: '–ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å—É',
          color: 'text-gray-600',
        };
    }
  };

  const statusInfo = getStatusMessage();

  return (
    <>
      <Head>
        <title>–°—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂—É - –û—Ä—Ç–æ–º–∞—Ç</title>
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>

      <div className="min-h-screen bg-gray-50">
        {/* Header */}
        <header className="bg-white shadow-sm">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div className="flex justify-between items-center py-4">
              <h1 className="text-2xl font-bold text-blue-600">üè• –û—Ä—Ç–æ–º–∞—Ç</h1>
            </div>
          </div>
        </header>

        {/* Main Content */}
        <div className="py-12">
          <div className="max-w-md mx-auto bg-white rounded-lg shadow-lg p-8 text-center">
            <div className="text-6xl mb-4">{statusInfo.icon}</div>
            
            <h1 className={`text-2xl font-bold mb-4 ${statusInfo.color}`}>
              {statusInfo.title}
            </h1>

            {paymentInfo && (
              <div className="bg-gray-50 rounded p-4 mb-6 text-left">
                <p className="text-sm text-gray-600 mb-2">
                  <strong>–ù–æ–º–µ—Ä –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:</strong> {paymentInfo.orderId}
                </p>
                <p className="text-sm text-gray-600 mb-2">
                  <strong>–°—É–º–∞:</strong> {paymentInfo.amount} ‚Ç¥
                </p>
                {paymentInfo.transactionId && (
                  <p className="text-sm text-gray-600">
                    <strong>ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó:</strong> {paymentInfo.transactionId}
                  </p>
                )}
              </div>
            )}

            {status === 'success' && (
              <div className="space-y-4">
                <p className="text-gray-600 mb-4">
                  –î—è–∫—É—î–º–æ –∑–∞ –ø–æ–∫—É–ø–∫—É! –í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ –æ–ø–ª–∞—á–µ–Ω–æ.
                </p>

                {/* ‚úÖ –î–û–î–ê–ù–û: –ö–Ω–æ–ø–∫–∞ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è –∫–æ–º—ñ—Ä–∫–∏ */}
                {paymentInfo?.sales && paymentInfo.sales.length > 0 && paymentInfo.sales[0].ortomatId && (
                  <div className="mb-6">
                    <button
                      onClick={handleOpenCell}
                      disabled={isOpeningCell}
                      className="w-full bg-blue-600 text-white py-4 px-6 rounded-lg font-semibold text-lg hover:bg-blue-700 transition-colors disabled:bg-gray-400 disabled:cursor-not-allowed flex items-center justify-center"
                    >
                      {isOpeningCell ? (
                        <>
                          <svg className="animate-spin h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24">
                            <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
                            <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                          </svg>
                          –í—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ –∫–æ–º—ñ—Ä–∫—É...
                        </>
                      ) : (
                        <>
                          üîì –í—ñ–¥–∫—Ä–∏—Ç–∏ –∫–æ–º—ñ—Ä–∫—É
                        </>
                      )}
                    </button>
                    <p className="mt-2 text-sm text-gray-500">
                      –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å —â–æ–± –≤—ñ–¥–∫—Ä–∏—Ç–∏ –∫–æ–º—ñ—Ä–∫—É —Ç–∞ –∑–∞–±—Ä–∞—Ç–∏ —Ç–æ–≤–∞—Ä
                    </p>
                  </div>
                )}

                <div className="bg-blue-50 rounded-lg p-4 text-sm text-blue-800">
                  <p className="font-semibold mb-2">üí° –©–æ –¥–∞–ª—ñ?</p>
                  <ol className="text-left space-y-1">
                    <li>1. –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É "–í—ñ–¥–∫—Ä–∏—Ç–∏ –∫–æ–º—ñ—Ä–∫—É"</li>
                    <li>2. –ü—ñ–¥—ñ–π–¥—ñ—Ç—å –¥–æ –æ—Ä—Ç–æ–º–∞—Ç—É</li>
                    <li>3. –ó–∞–±–µ—Ä—ñ—Ç—å –≤–∞—à —Ç–æ–≤–∞—Ä –∑ –∫–æ–º—ñ—Ä–∫–∏</li>
                  </ol>
                </div>
              </div>
            )}

            {status === 'failed' && (
              <div className="space-y-4">
                <p className="text-gray-600">
                  –ù–∞ –∂–∞–ª—å, –ø–ª–∞—Ç—ñ–∂ –Ω–µ –ø—Ä–æ–π—à–æ–≤. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑ –∞–±–æ
                  –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ —Å–ª—É–∂–±–∏ –ø—ñ–¥—Ç—Ä–∏–º–∫–∏.
                </p>
                <button
                  onClick={() => router.back()}
                  className="bg-red-600 text-white py-2 px-6 rounded-lg hover:bg-red-700"
                >
                  –°–ø—Ä–æ–±—É–≤–∞—Ç–∏ –∑–Ω–æ–≤—É
                </button>
              </div>
            )}

            {status === 'pending' && (
              <div className="space-y-4">
                <p className="text-gray-600">
                  –ü–ª–∞—Ç—ñ–∂ –æ–±—Ä–æ–±–ª—è—î—Ç—å—Å—è. –ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞—á–µ–∫–∞–π—Ç–µ...
                </p>
                <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto"></div>
              </div>
            )}

            {status === 'error' && (
              <div className="space-y-4">
                <p className="text-gray-600">
                  –ù–µ –≤–¥–∞–ª–æ—Å—è –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —Å—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂—É. –°–ø—Ä–æ–±—É–π—Ç–µ –æ–Ω–æ–≤–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É.
                </p>
                <button
                  onClick={checkStatus}
                  className="bg-blue-600 text-white py-2 px-6 rounded-lg hover:bg-blue-700"
                >
                  –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —â–µ —Ä–∞–∑
                </button>
              </div>
            )}

            <div className="mt-8 space-x-4">
              <Link href="/" className="text-blue-600 hover:underline">
                –ù–∞ –≥–æ–ª–æ–≤–Ω—É
              </Link>
              {status === 'success' && (
                <Link href="/profile" className="text-blue-600 hover:underline">
                  –ú–æ—ó –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
                </Link>
              )}
            </div>
          </div>
        </div>

        {/* Footer */}
        <footer className="bg-white mt-auto">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4">
            <p className="text-center text-sm text-gray-500">
              ¬© {new Date().getFullYear()} –û—Ä—Ç–æ–º–∞—Ç. –í—Å—ñ –ø—Ä–∞–≤–∞ –∑–∞—Ö–∏—â–µ–Ω—ñ.
            </p>
          </div>
        </footer>
      </div>
    </>
  );
}
